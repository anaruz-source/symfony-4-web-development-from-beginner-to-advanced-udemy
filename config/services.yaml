# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    download_directory: '../public'
    admin_email: 'adm@gmail.com'
    videos_dir: '%kernel.project_dir%/public/uploads/videos'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $global: 'This must be used in sevices defined in Services folder, otherwise it errors out'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Controller\DefaultController:
        bind:
            $logger: '@monolog.logger.doctrine'

    App\Services\MyService:
        arguments:
            $param: 'I am Alive. Hola!'
            $adminEmail: '%admin_email%'
            $argService: '@App\Services\ParamService'
        properties:
            my: '@App\Services\PropService'
            logger: '@monolog.logger'
    App\Services\ParamService:
        lazy: true
    App\Services\ServiceWithTag:
        tags:
            - {name: doctrine.event_listener, event: postFlush}
            - {name: kernel.cache_clearer, event: clear}

    App\Services\ServiceInterface: '@App\Services\MyService1'
    #App\Services\KernelResponseListener:
        #tags:
            #- {name: kernel.event_listener, event: kernel.response}  # if onKernelResponse method is declared in KernetResponseListerner class
            #- {name: kernel.event_listener, event: kernel.response, method: kernelResponse} # if kernelResponse method is declared (without on)

    # App\Listeners\VideoCreatedListener:
    #     tags:
    #         - {name: kernel.event_listener, event: video.created.event, method: videoCreated} # videoCreated method is declared (without on)